/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import database.ConnectionProvider;
import static java.lang.Integer.parseInt;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Joseph
 */
public class NewClientForm extends javax.swing.JDialog {

    /**
     * Creates new form NewClientForm
     */
    public NewClientForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNewClientCreate = new javax.swing.JButton();
        btnNewClientCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtNewClientFirstName = new javax.swing.JTextField();
        txtNewClientLastName = new javax.swing.JTextField();
        txtNewClientEmail = new javax.swing.JTextField();
        txtNewClientCity = new javax.swing.JTextField();
        txtNewClientStreet = new javax.swing.JTextField();
        txtNewClientHousenumber = new javax.swing.JTextField();
        txtNewClientPostcode = new javax.swing.JTextField();
        txtNewClientUsername = new javax.swing.JTextField();
        txtNewClientPassword = new javax.swing.JTextField();
        jXDateDOB = new org.jdesktop.swingx.JXDatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnNewClientCreate.setText("OK");
        btnNewClientCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewClientCreateActionPerformed(evt);
            }
        });

        btnNewClientCancel.setText("Cancel");
        btnNewClientCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewClientCancelActionPerformed(evt);
            }
        });

        jLabel1.setText("First name:");

        jLabel2.setText("Last name:");

        jLabel3.setText("Email:");

        jLabel4.setText("Street: ");

        jLabel5.setText("Housenumber:");

        jLabel6.setText("Postcode:");

        jLabel7.setText("Username:");

        jLabel8.setText("Date of birth:");

        jLabel9.setText("City");

        jLabel10.setText("Password:");

        txtNewClientCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewClientCityActionPerformed(evt);
            }
        });

        txtNewClientPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewClientPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(btnNewClientCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNewClientCancel)
                .addContainerGap(122, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtNewClientCity, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNewClientLastName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNewClientFirstName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNewClientStreet, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNewClientEmail)
                    .addComponent(txtNewClientHousenumber)
                    .addComponent(txtNewClientPostcode)
                    .addComponent(txtNewClientUsername)
                    .addComponent(txtNewClientPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addComponent(jXDateDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNewClientFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNewClientLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jXDateDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNewClientEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtNewClientCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNewClientStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewClientHousenumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewClientPostcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewClientUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewClientPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewClientCreate)
                    .addComponent(btnNewClientCancel))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNewClientCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewClientCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewClientCityActionPerformed

    private void btnNewClientCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewClientCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnNewClientCancelActionPerformed

    private void txtNewClientPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewClientPasswordActionPerformed

    }//GEN-LAST:event_txtNewClientPasswordActionPerformed

    private void btnNewClientCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewClientCreateActionPerformed
        
        try {
            ConnectionProvider conn = new ConnectionProvider();
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
            String dateString = formatter.format(jXDateDOB.getDate());
            
            if(!isNameValid(txtNewClientFirstName.getText())){
                JOptionPane.showMessageDialog(null, "First name must have a length of 2 to 20 characters!");
            }else if(!isNameValid(txtNewClientLastName.getText())){
                JOptionPane.showMessageDialog(null, "Last name must have a length of 2 to 20 characters!");
            }else if(!isDOBValid(dateString)){
                JOptionPane.showMessageDialog(null, "Invalid date of birth!");
            }else if(!isEmailValid(txtNewClientEmail.getText())){
                JOptionPane.showMessageDialog(null, "Invalid email!");
            if(!(conn.isClientEmailInDB(txtNewClientEmail.getText()))){
                JOptionPane.showMessageDialog(null, "Email already in use!");
            }
            }else if(!isNameValid(txtNewClientCity.getText())){
                JOptionPane.showMessageDialog(null, "Invalid city name!");
            }else if(!isNumberValid(txtNewClientHousenumber.getText())){
                JOptionPane.showMessageDialog(null, "Invalid house number!");
            }else if(!isPostCodeValid(txtNewClientPostcode.getText())){
                JOptionPane.showMessageDialog(null, "Invalid post code!");
            }else if(!isUserNameValid(txtNewClientUsername.getText())){
                JOptionPane.showMessageDialog(null, "Username must be at least 6 to 10 characters long and contain letters or digits.");
            }else if(!isUserNameValid(txtNewClientPassword.getText())){
                JOptionPane.showMessageDialog(null, "Password must be at least 6 to 10 characters long and contain letters or digits.");
            }else{
                conn.insertNewClientIntoClients(txtNewClientFirstName.getText(), txtNewClientLastName.getText(), txtNewClientStreet.getText(), parseInt(txtNewClientHousenumber.getText()),
                            txtNewClientPostcode.getText(), txtNewClientCity.getText(),dateString, txtNewClientEmail.getText(), txtNewClientUsername.getText(), txtNewClientPassword.getText());
                JOptionPane.showMessageDialog(null, "Client " + txtNewClientFirstName.getText() + " " + txtNewClientLastName.getText() + " added successfully");
                this.dispose();
            }
        } 
        catch (Exception ex) { 
            System.out.println("Error: " + ex);
            JOptionPane.showMessageDialog(null, "Empty field/fields!");
        }
    }//GEN-LAST:event_btnNewClientCreateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewClientCancel;
    private javax.swing.JButton btnNewClientCreate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private org.jdesktop.swingx.JXDatePicker jXDateDOB;
    private javax.swing.JTextField txtNewClientCity;
    private javax.swing.JTextField txtNewClientEmail;
    private javax.swing.JTextField txtNewClientFirstName;
    private javax.swing.JTextField txtNewClientHousenumber;
    private javax.swing.JTextField txtNewClientLastName;
    private javax.swing.JTextField txtNewClientPassword;
    private javax.swing.JTextField txtNewClientPostcode;
    private javax.swing.JTextField txtNewClientStreet;
    private javax.swing.JTextField txtNewClientUsername;
    // End of variables declaration//GEN-END:variables
    
    public boolean isNameValid(String text){
        try {
            return !(text.length() < 2 && text.length() > 20);
        }catch(Exception e){
            System.out.println("Error: " + e);
        }
        return false;
    }
    
    public boolean isDOBValid(String newDate){
        Date date = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        String dateString = formatter.format(date);
        
        return dateString.compareTo(newDate) > 0;
    }
    
    public boolean isEmailValid(String email) {
        String emailRegex = "^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\.[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$";
        Pattern pattern = Pattern.compile(emailRegex);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }
    
    public boolean isNumberValid(String text){
        try {
            Integer.parseInt(text);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public boolean isPostCodeValid(String text){
        return (text.length() <= 5 && text.length() > 1);
    }
    
    public boolean isUserNameValid(String text){
        String usernameRegex = "^\\w{6,10}$";
        Pattern pattern = Pattern.compile(usernameRegex);
        Matcher matcher = pattern.matcher(text);
        return matcher.matches();
    }

}
